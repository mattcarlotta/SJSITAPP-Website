name: Deployment

"on":
  push:
    branches:
      - main

env:
  REMOTE: ${{secrets.USERNAME}}@${{secrets.HOST}}

jobs:
  deploy:
    if: "!contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    runs-on: ubuntu-20.04

    services:
      mongodb:
        image: mongo:3.6.8
        ports:
          - 27017:27017

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Yarn Cache Directory
        id: yarn-cache-dir-path
        run: echo '::set-output name=dir::$(yarn cache dir)'

      - name: Utilize Yarn Cache Directory
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Utilize Next Cache Directory
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Run App Tests
        id: apptests
        run: yarn test
        env:
          APIPORT: 5000
          CLIENT: http://localhost:3000
          COOKIEKEY: THIS IS JUST A TEST
          DATABASE: test-db
          EMAIL: test.test@test.com
          NEXT_PUBLIC_BASEURL: http://localhost:5000/api/
          NEXT_PUBLIC_CLIENT: http://localhost:3000
          NEXT_PUBLIC_IMAGEAPI: http://localhost:4000
          PORT: 3000

      - name: Run API Tests
        if: steps.apptests.exit_code == 0
        id: apitests
        run: yarn test
        env:
          APIPORT: 5000
          CLIENT: http://localhost:3000
          COOKIEKEY: THIS IS JUST A TEST
          DATABASE: test-db
          EMAIL: test.test@test.com
          NEXT_PUBLIC_BASEURL: http://localhost:5000/api/
          NEXT_PUBLIC_CLIENT: http://localhost:3000
          NEXT_PUBLIC_IMAGEAPI: http://localhost:4000
          PORT: 3000

      - name: Create Local Build
        if: steps.apitests.exit_code == 0
        id: build
        run: yarn build
        env:
          APIPORT: ${{ secrets.APIPORT }}
          CLIENT: ${{ secrets.CLIENT }}
          COOKIEKEY: ${{ secrets.COOKIEKEY }}
          DATABASE: ${{ secrets.DATABASE }}
          DOMAIN: ${{ secrets.DOMAIN }}
          NEXT_PUBLIC_BASEURL: ${{ secrets.BASEURL }}
          NEXT_PUBLIC_CLIENT: ${{ secrets.CLIENT }}
          NEXT_PUBLIC_IMAGEAPI: ${{ secrets.IMAGEAPI }}
          PORT: ${{ secrets.PORT }}

      - name: Deploy Build
        if: steps.build.exit_code == 0
        run: |
          echo '${{secrets.DEPLOYKEY}}' > deploy_key
          chmod 600 ./deploy_key
          rsync -chav --delete --exclude prod.json --exclude .env.prod --exclude='$(yarn cache dir)' \
            -e 'ssh -i ./deploy_key -o StrictHostKeyChecking=no' \
            --exclude /deploy_key \
            --exclude /.git/ \
            --exclude /node_modules/ \
            --exclude /prod.json/ \
            --exclude '$(yarn cache dir)' \
            ./ ${{env.REMOTE}}:${{secrets.DESTINATION}}
      - name: Restart Application
        run: ssh -i ./deploy_key -o 'StrictHostKeyChecking no' -v ${{env.REMOTE}} 'cd ${{secrets.DESTINATION}};yarn;pm2 restart 0'
